import type { NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";
import UserProfile from "../components/UserProfile";
import { trpc } from "../utils/trpc";
import Header from "../components/Header";
import { useState } from "react";

const Home: NextPage = () => {
  const { data: session, status } = useSession();

  const ctx = trpc.useContext();

  const { data: posts } = trpc.post.getAll.useQuery();

  const mutation = trpc.post.createPost.useMutation({
    onSuccess() {
      ctx.post.invalidate();
    },
  });

  const [title, setTitle] = useState<string>("");

  function createPost(title: string) {
    if (title !== null) {
      mutation.mutate({ title });
    }
  }

  if (status === "loading") {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>Humble Persimmon</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        {session ? (
          <>
            <UserProfile session={session} />
            <h2 className="m-4">Create a post:</h2>
            <form
              className="m-4"
              onSubmit={(e) => {
                e.preventDefault();
                createPost(title);
                setTitle("");
              }}
            >
              <input
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                className="text-black"
                type="text"
                placeholder="Title"
              />
              <button type="submit">Submit</button>
            </form>
            {mutation.error ? <p>{mutation.error.message}</p> : null}
            <div className="m-4">
              {posts?.map((post) => (
                <div key={post.id}>{post.title}</div>
              ))}
            </div>
          </>
        ) : null}
      </main>
    </>
  );
};

export default Home;
